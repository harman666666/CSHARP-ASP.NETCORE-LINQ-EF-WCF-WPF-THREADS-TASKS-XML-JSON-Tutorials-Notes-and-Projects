@model MvcMovie.Models.Movie

@{
    /*
    By including a @model statement at the top of the view file, you can specify the type of 
    object that the view expects. When you created the movie controller, Visual Studio automatically 
    included the following @model statement at the top of the Details.cshtml file: 

    This @model directive allows you to access the movie that the controller passed to the view by 
    using a Model object that’s strongly typed. For example, in the Details.cshtml view, the code passes 
    each movie field to the DisplayNameFor and DisplayFor HTML Helpers with the strongly typed Model object. 
    The Create and Edit methods and views also pass a Movie model object.
     */
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Movie</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Genre)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Genre)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ReleaseDate)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ReleaseDate)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.ID">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
